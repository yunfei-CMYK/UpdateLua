TLV格式测试固件包说明
========================

本目录包含5个符合TLV格式规范的测试固件包文件：

1. test_firmware_small.bin
   - 分组长度: 512字节
   - 固件大小: 2048字节 (2KB)
   - 分组数量: 4个
   - MAC模式: 0x10开始的递增序列
   - 固件数据: 0x20开始的递增序列

2. test_firmware_medium.bin
   - 分组长度: 1024字节
   - 固件大小: 8192字节 (8KB)
   - 分组数量: 8个
   - MAC模式: 0x30开始的递增序列
   - 固件数据: 0x40开始的递增序列

3. test_firmware_large.bin
   - 分组长度: 2048字节
   - 固件大小: 16384字节 (16KB)
   - 分组数量: 8个
   - MAC模式: 0x50开始的递增序列
   - 固件数据: 0x60开始的递增序列

4. test_firmware_special.bin
   - 分组长度: 256字节
   - 固件大小: 1024字节 (1KB)
   - 分组数量: 4个
   - MAC模式: 0x70开始的递增序列
   - 固件数据: 0x80开始的递增序列

5. test_firmware_single.bin
   - 分组长度: 4096字节
   - 固件大小: 4096字节 (4KB)
   - 分组数量: 1个
   - MAC模式: 0x90开始的递增序列
   - 固件数据: 0xA0开始的递增序列

TLV结构说明:
============

外层TLV:
- TAG: 0x71 (固件包标识)
- LENGTH: 2字节大端序，表示内部数据长度
- VALUE: 内部TLV结构

内层TLV结构:
1. TAG=0x57: 分组长度
   - LENGTH: 0x0002 (2字节)
   - VALUE: 2字节大端序整数，表示分组长度

2. TAG=0x58: 固件包MAC
   - LENGTH: 0x0010 (16字节)
   - VALUE: 16字节MAC值

3. TAG=0x59: 密文固件包
   - LENGTH: 固件包实际长度
   - VALUE: 固件包数据，长度必须是分组长度的整数倍

使用方法:
=========

这些文件可以用于测试TLV解析功能，验证：
1. 外层TAG=0x71的识别和解析
2. 内层TLV结构的正确解析
3. 分组长度的提取和验证
4. MAC值的提取
5. 固件包的分组处理

每个文件都严格按照TLV格式规范生成，可以直接用于测试脚本验证。
